<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4"><Item class="ModuleScript"><Properties><string name="Name">MainModule</string><ProtectedString name="Source">-- Conglomeration
-- See https://Conglomeration.github.io/About for more information.

-- @license MIT
-- MIT License (&lt;https://astolfodev.mit-license.org/&gt;)
--
-- Copyright © 2021 AstolfoDev &lt;AstolfoDev@wafflepowered.com&gt;, Mokiy &lt;mokiy@wafflepowered.com&gt;
--
-- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
--
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
--
-- THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

-- @minified
-- @generated
-- @source https://github.com/Conglomeration/Lua

local d=require;local a=math;local n=bit or bit32;local t=error;local l=table;local c=string;local r=pairs;local f=setmetatable;local e=print;local b=tonumber;local s=ipairs;local o=(getfenv or function()return _ENV end)()local e={["searchers"]={[2]=function(n)t("Module not bundled: "..n)end}}if _VERSION=="Luau"then d=function(...)return e["searchers"][2](...)()end;a=f({["mod"]=a.fmod},{__index=o.math})end;do local e=e.searchers or e.loaders;local h=e[2]e[2]=function(u)local n={["util"]=function()local n={}n.forEach=function(n,o)for e,n in r(n)do o(n,e)end end;n.split_fast=function(o,n)if n==nil then n='%s'end;local e={}for n in c.gmatch(o,'([^'..n..']+)')do l.insert(e,n)end;return e end;n.split=function(o,n)n=n or'%s'local e={}for n,o in c.gmatch(o,'([^'..n..']*)('..n..'?)')do l.insert(e,n)if o==''then return e end end end;return n end,["Parsers"]=function()local e=d('util')local n=function(o,e,n)return{[0]=o:lower(),[1]=n,[2]=e}end;local n={n('nil',function()end,function()return''end),n('String',function(n)return n end,function(n)return n end),n('Number',function(n)return tostring(n)end,function(n)return b(n)end),n('function',function(n)warn('Unable to encode functions. Encoding functions will not be added in a future version.\nPlease implement your own lua bytecode parser and use a string to transmit this data.\nReturning nothing')return''end,function(n)warn('Unable to parse functions. Might be added in a future version. Returning empty function')return function()t('Cannot parse functions yet. Please try again later',2)end end),n('UserData',function()t('Cannot parse UserData - Try adding a parser/encoder to Conglomeration for this specific type')end,function()t('Cannot encode UserData - Try adding a parser/encoder to Conglomeration for this specific type')end),n('UDim',function(n)return n.Scale..'\6'..n.Offset end,function(n)local n=e.split_fast(n,'\6')return UDim.new(n[1],n[2])end),n('UDim2',function(n)return n.X.Scale..'\6'..n.Y.Scale..'\6'..n.X.Offset..'\6'..n.Y.Offset end,function(n)local n=e.split_fast(n,'\6')return UDim2.new(n[1],n[2],n[3],n[4])end),n('Vector3',function(n)return n.X..'\6'..n.Y..'\6'..n.Z end,function(n)local n=e.split_fast(n,'\6')return Vector3.new(n[1],n[2],n[3])end),n('Vector2',function(n)return n.X..'\6'..n.Y end,function(n)local n=e.split_fast(n,'\6')return Vector2.new(n[1],n[2])end)}return n end,["Base64"]=function()local u={}local e={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','0','1','2','3','4','5','6','7','8','9','+','/'}local o={}for n,e in s(e)do o[e]=n-1 end;local d='='local function r(n)return e[n+1]end;local function f(n)return o[n]end;function u.encode(e)local a={e:byte(i,#e)}local e={}local i=1;while i&lt;=#a-2 do local t=0;local o=n.blshift(a[i],16)o=n.band(o,16711680)t=n.bor(t,o)o=n.blshift(a[i+1],8)o=n.band(o,65280)t=n.bor(t,o)o=n.band(a[i+2],255)t=n.bor(t,o)o=n.blogic_rshift(t,18)o=n.band(o,63)e[#e+1]=r(o)o=n.blogic_rshift(t,12)o=n.band(o,63)e[#e+1]=r(o)o=n.blogic_rshift(t,6)o=n.band(o,63)e[#e+1]=r(o)o=n.band(t,63)e[#e+1]=r(o)i=i+3 end;if#a%3==1 then local t=n.blshift(a[i],16)t=n.band(t,16711680)local o=n.blogic_rshift(t,18)o=n.band(o,63)e[#e+1]=r(o)o=n.blogic_rshift(t,12)o=n.band(o,63)e[#e+1]=r(o)e[#e+1]=d;e[#e+1]=d elseif#a%3==2 then local t=0;local o=n.blshift(a[i],16)o=n.band(o,16711680)t=n.bor(t,o)o=n.blshift(a[i+1],8)o=n.band(o,65280)t=n.bor(t,o)o=n.blogic_rshift(t,18)o=n.band(o,63)e[#e+1]=r(o)o=n.blogic_rshift(t,12)o=n.band(o,63)e[#e+1]=r(o)o=n.blogic_rshift(t,6)o=n.band(o,63)e[#e+1]=r(o)e[#e+1]=d end;return l.concat(e)end;function u.decode(l)local r=#l;if d then r=l:find(d,1,true)or r+1;r=r-1 end;assert(r&gt;0,'Invalid input, cannot decode a padded string with no bytes: '..tostring(l))local a={}local e=1;while e&lt;=r-3 do local t=0;local o=f(l:sub(e,e))o=n.blshift(o,18)t=n.bor(t,o)e=e+1;o=f(l:sub(e,e))o=n.blshift(o,12)t=n.bor(t,o)e=e+1;o=f(l:sub(e,e))o=n.blshift(o,6)t=n.bor(t,o)e=e+1;o=f(l:sub(e,e))t=n.bor(t,o)e=e+1;o=n.blogic_rshift(t,16)o=n.band(o,255)a[#a+1]=o;o=n.blogic_rshift(t,8)o=n.band(o,255)a[#a+1]=o;o=n.band(t,255)a[#a+1]=o end;if r%4==2 then local t=0;local o=f(l:sub(e,e))o=n.blshift(o,18)t=n.bor(t,o)e=e+1;o=f(l:sub(e,e))o=n.blshift(o,12)t=n.bor(t,o)e=e+1;o=n.blogic_rshift(t,16)o=n.band(o,255)a[#a+1]=o elseif r%4==3 then local t=0;local o=f(l:sub(e,e))o=n.blshift(o,18)t=n.bor(t,o)e=e+1;o=f(l:sub(e,e))o=n.blshift(o,12)t=n.bor(t,o)e=e+1;o=f(l:sub(e,e))o=n.blshift(o,6)t=n.bor(t,o)e=e+1;o=n.blogic_rshift(t,16)o=n.band(o,255)a[#a+1]=o;o=n.blogic_rshift(t,8)o=n.band(o,255)a[#a+1]=o elseif r%4==1 then t('Invalid length input string, extra character: '..tostring(l:sub(e,e)))end;return c.char(unpack(a))end;do local function i(n)if n-a.floor(n)&gt;0 then t('trying to use bitwise operation on non-integer!')end end;local function e(o)i(o)if o&lt;0 then return e(n.bnot(a.abs(o))+1)end;local e={}local n=1;while o&gt;0 do local t=a.mod(o,2)if t==1 then e[n]=1 else e[n]=0 end;o=(o-t)/2;n=n+1 end;return e end;local function t(o)local t=l.getn(o)local e=0;local n=1;for t=1,t do e=e+o[t]*n;n=n*2 end;return e end;local function c(e,o)local t={}local n={}if l.getn(e)&gt;l.getn(o)then t=e;n=o else t=o;n=e end;for e=l.getn(n)+1,l.getn(t)do n[e]=0 end end;local function r(n,o)local r=e(n)local o=e(o)c(r,o)local e={}local n=a.max(l.getn(r),l.getn(o))for n=1,n do if r[n]==0 and o[n]==0 then e[n]=0 else e[n]=1 end end;return t(e)end;local function f(o,n)local o=e(o)local r=e(n)c(o,r)local e={}local n=a.max(l.getn(o),l.getn(r))for n=1,n do if o[n]==0 or r[n]==0 then e[n]=0 else e[n]=1 end end;return t(e)end;local function o(n)local n=e(n)local e=a.max(l.getn(n),32)for e=1,e do if n[e]==1 then n[e]=0 else n[e]=1 end end;return t(n)end;local function d(o,n)local o=e(o)local e=e(n)c(o,e)local r={}local n=a.max(l.getn(o),l.getn(e))for n=1,n do if o[n]~=e[n]then r[n]=1 else r[n]=0 end end;return t(r)end;local function u(n,t)i(n)local e=0;if n&lt;0 then n=o(a.abs(n))+1;e=2147483648 end;for o=1,t do n=n/2;n=r(a.floor(n),e)end;return a.floor(n)end;local function c(n,e)i(n)if n&lt;0 then n=o(a.abs(n))+1 end;for e=1,e do n=n/2 end;return a.floor(n)end;local function l(n,e)i(n)if n&lt;0 then n=o(a.abs(n))+1 end;for e=1,e do n=n*2 end;return f(n,4294967295)end;local function a(n,e)local o=r(o(n),o(e))local n=r(n,e)local n=f(n,o)return n end;n={bnot=o,band=f,bor=r,bxor=d,brshift=u,blshift=l,bxor2=a,blogic_rshift=c,tobits=e,tonumb=t}end;return u end,["typeof"]=function()local n=getfenv or function()return _ENV end;local n=n().typeof or n().type or function()t('Type/Typeof is undefined. Please define it before loading Conglomeration')end;typeof=function(...)return n(...):lower()end;if typeof''~='string'then t('Typeof returns invalid type')end;return typeof end}if n[u]then return n[u]else return h(u)end end end;local i=d('typeof')local E=d('util')local s=d('Parsers')local h=d('Base64')local f='STANDARD-0.1.0'local o=0;local n={['HEADER_BEGIN']='\1',['END_HEADER_FIELD']='\a',['DATA_NAME']='\3',['DATA_TYPE']='\4',['DATA_LENGTH']='\5',['DATA_LAST']='\v',['DATA_BEGIN']='\6',['FORMAT_VERSION_BEGIN']='\b',['FORMAT_VERSION_END']='\t'}if o~=0 then f='DEBUGOUT.'..o..'-'..f;if o==1 then for e in r(n)do n[e]='\n['..e..']'end elseif o==2 then for e in r(n)do n[e]='\n- hcode-'..e..': 'end end end;for e,o in r(n)do n[o]=e end;local _=function(e)for o,n in r(s)do if n[0]==e then return n end end;t('No parser found for datatype '..e)end;local u=function(e)local n=n;if o&gt;0 then local o={}for t,n in r(n)do o[t]=c.gsub(n,'\n','')e=e:gsub('\n','')end;n=o end;local o=n.FORMAT_VERSION_BEGIN..f..n.FORMAT_VERSION_END;if not e:sub(1,#o)==o then t('Incompatible Data Format (Header Mismatch)')end;e=c.sub(e,#o+1,#e)local r={}local n=function(i)local a=({e:find(n.DATA_BEGIN)})[2]if not a then t('Cannot find DATA_BEGIN ('..n.DATA_BEGIN..')')end;local o=c.sub(e,1,a)local t=function(e)if not e then t('INTERNAL: !hc')end;local l=n.END_HEADER_FIELD;local n=o;local o=({n:find(e)})[1]if not o then t('Cannot find hc: '..e,2)end;n=c.sub(n,o+1)local e=({n:find(l)})[1]if not e then t('Cannot find end-hc',2)end;n=c.sub(n,1,e-1)return n end;local o={}o.Name=h.decode(t(n.DATA_NAME))o.Type=t(n.DATA_TYPE)o.Length=b(t(n.DATA_LENGTH))o.__isLastChunk=t(n.DATA_LAST)=='true'o.Data=c.sub(e,a+1,a+o.Length)if i then l.insert(r,o)end;e=c.sub(e,a+o.Length,#e)return o end;local e=n()if not e.Name=='\1________checkIntegrety'then t('Invalid Integrety Check Chunk!\nSpec requires 1st chunk to be an integrety chunk')end;if not e.__isLastChunk then local e={__isLastChunk=false}repeat e=n(true)until e.__isLastChunk end;return r end;local d=function(n)local e=_(n.Type)local e=e[1]return e(n.Data)end;local e=function(n)local n=u(n)local e={}for o,n in r(n)do e[n.Name]=d(n)end;return e end;local a=function(e,o)if not e then t('No name specified')end;if i(e)~='string'then t('Name is not a string')end;if c.find(e,n.END_HEADER_FIELD)then t('Name cannot contain the symbol '..n.END_HEADER_FIELD)end;e=h.encode(e)local t=i(o)local n=_(t)local l=n[2]local n={}n.Name=e;n.Type=t;n.Data=l(o)n.Length=#n.Data;return n end;local e=function(i)local o=''local e=function(...)local n={...}if#n&gt;1 then return l.concat({...},'')else return n[1]end end;local e=function(o,l)local t=n.HEADER_BEGIN;local e=function(...)t=t..e(...)end;e(n.DATA_NAME,o.Name,n.END_HEADER_FIELD)e(n.DATA_TYPE,o.Type)e(n.END_HEADER_FIELD)e(n.DATA_LENGTH,o.Length,n.END_HEADER_FIELD)e(n.DATA_LAST,tostring(l),n.END_HEADER_FIELD)e(n.DATA_BEGIN,o.Data)return t end;for t,n in r(i)do if t==#i then o=o..e(n,true)else o=o..e(n,false)end end;return n.FORMAT_VERSION_BEGIN..f..n.FORMAT_VERSION_END..e(a('\1________checkIntegrety','works'))..o end;local n=function(o)local n={}for e,o in r(o)do l.insert(n,a(e,o))end;return e(n)end;s.table={[0]='table',[1]=function(n)local n=u(n)local e={}for o,n in r(n)do e[n.Name]=d(n)end;return e end,[2]=function(n)local o={}for n,e in r(n)do if i(n)~='string'and i(n)~='number'then t('Only string/number-based keys are allowed for tables!')end;l.insert(o,a(tostring(n),e))end;return e(o)end}local n={}n.__Parsers=s;n.__ENCODING={['\1']=e,['\2']=a}n.__DECODING={['\1']=u,['\2']=d}n.__Util=E;return n</ProtectedString><boolean name="cgl">true</boolean><string name="copyright">Copyright (c) 2021 AstolfoDev. Licensed under the MIT License.</string><int64 name="SourceAssetId">0</int64></Properties></Item></roblox>